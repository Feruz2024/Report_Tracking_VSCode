{"version":3,"file":"static/js/567.50ad8f31.chunk.js","mappings":"qJAyEA,QArEA,SAA8BA,GAA+B,IAA9B,WAAEC,EAAU,YAAEC,GAAaF,EACxD,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAASJ,EAAWK,eAAiB,KACtEC,EAAaC,IAAkBH,EAAAA,EAAAA,UAASJ,EAAWQ,cAAgB,KACnEC,EAAkBC,IAAuBN,EAAAA,EAAAA,UAASJ,EAAWW,mBAAqB,KAClFC,EAAWC,IAAgBT,EAAAA,EAAAA,UAASJ,EAAWc,YAAc,KAC7DC,EAAOC,IAAYZ,EAAAA,EAAAA,UAAS,KAC5Ba,EAASC,IAAcd,EAAAA,EAAAA,WAAS,GA0CvC,OAxCAe,EAAAA,EAAAA,YAAU,KACRhB,EAAgBH,EAAWK,eAAiB,IAC5CE,EAAeP,EAAWQ,cAAgB,IAC1CE,EAAoBV,EAAWW,mBAAqB,IACpDE,EAAab,EAAWc,YAAc,GAAG,GACxC,CAACd,KAoCFoB,EAAAA,EAAAA,MAAA,QAAMC,SAlCaC,UACnBC,EAAEC,iBACFR,EAAS,IACTE,GAAW,GACX,MAAMO,EAAUC,OAAOxB,GACjByB,EAASD,OAAOpB,GAChBsB,EAAcF,OAAOjB,GAC3B,GAAIgB,IAAYE,EAASC,EAGvB,OAFAZ,EAAS,6DACTE,GAAW,GAGb,IAYE,WAXkBW,MAAM,oBAAa7B,EAAW8B,MAAO,CACrDC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB9B,cAAeoB,EACfjB,aAAcmB,EACdhB,kBAAmBiB,EACnBd,WAA0B,KAAdF,EAAmB,KAAOc,OAAOd,GAC7CwB,OAAQ,iBAGHC,GAAI,MAAM,IAAIC,MAAM,4BACzBrC,GAAaA,GACnB,CAAE,MAAOsC,GACPvB,EAASuB,EAAIC,SAAW,QAC1B,CAAC,QACCtB,GAAW,EACb,GAI8BuB,MAAO,CAAEC,OAAQ,iBAAkBC,QAAS,EAAGC,OAAQ,GAAIC,SAAA,EACvFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mCACJC,EAAAA,EAAAA,KAAA,OAAAD,UACEzB,EAAAA,EAAAA,MAAA,SAAAyB,SAAA,CAAO,mBAAeC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,SAASC,IAAI,IAAIC,MAAO/C,EAAcgD,SAAU3B,GAAKpB,EAAgBoB,EAAE4B,OAAOF,OAAQG,UAAQ,EAACC,SAAUpC,UAE7I6B,EAAAA,EAAAA,KAAA,OAAAD,UACEzB,EAAAA,EAAAA,MAAA,SAAAyB,SAAA,CAAO,kBAAcC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,SAASC,IAAI,IAAIC,MAAO3C,EAAa4C,SAAU3B,GAAKhB,EAAegB,EAAE4B,OAAOF,OAAQG,UAAQ,EAACC,SAAUpC,UAE1I6B,EAAAA,EAAAA,KAAA,OAAAD,UACEzB,EAAAA,EAAAA,MAAA,SAAAyB,SAAA,CAAO,uBAAmBC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,SAASC,IAAI,IAAIC,MAAOxC,EAAkByC,SAAU3B,GAAKb,EAAoBa,EAAE4B,OAAOF,OAAQG,UAAQ,EAACC,SAAUpC,UAEzJ6B,EAAAA,EAAAA,KAAA,OAAAD,UACEzB,EAAAA,EAAAA,MAAA,SAAAyB,SAAA,CAAO,uBAAmBC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,SAASC,IAAI,IAAIC,MAAOrC,EAAWsC,SAAU3B,GAAKV,EAAaU,EAAE4B,OAAOF,OAAQI,SAAUpC,UAElI6B,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASM,SAAUpC,EAAQ4B,SAAC,mBACxC9B,IAAS+B,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAEa,MAAO,OAAQT,SAAE9B,MAG/C,C","sources":["entities/AssignmentSummaryForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst API_URL = \"/api/assignments/\";\r\n\r\nfunction AssignmentSummaryForm({ assignment, onSubmitted }) {\r\n  const [plannedSpots, setPlannedSpots] = useState(assignment.planned_spots || \"\");\r\n  const [missedSpots, setMissedSpots] = useState(assignment.missed_spots || \"\");\r\n  const [transmittedSpots, setTransmittedSpots] = useState(assignment.transmitted_spots || \"\");\r\n  const [gainSpots, setGainSpots] = useState(assignment.gain_spots || \"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPlannedSpots(assignment.planned_spots || \"\");\r\n    setMissedSpots(assignment.missed_spots || \"\");\r\n    setTransmittedSpots(assignment.transmitted_spots || \"\");\r\n    setGainSpots(assignment.gain_spots || \"\");\r\n  }, [assignment]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setLoading(true);\r\n    const planned = Number(plannedSpots);\r\n    const missed = Number(missedSpots);\r\n    const transmitted = Number(transmittedSpots);\r\n    if (planned !== missed + transmitted) {\r\n      setError(\"Planned spots must equal missed + transmitted spots.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(`${API_URL}${assignment.id}/`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          planned_spots: planned,\r\n          missed_spots: missed,\r\n          transmitted_spots: transmitted,\r\n          gain_spots: gainSpots === \"\" ? null : Number(gainSpots),\r\n          status: \"SUBMITTED\",\r\n        }),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to submit summary\");\r\n      if (onSubmitted) onSubmitted();\r\n    } catch (err) {\r\n      setError(err.message || \"Error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ border: \"1px solid #ccc\", padding: 8, margin: 8 }}>\r\n      <h4>Submit Reconciliation Summary</h4>\r\n      <div>\r\n        <label>Planned Spots: <input type=\"number\" min=\"0\" value={plannedSpots} onChange={e => setPlannedSpots(e.target.value)} required disabled={loading} /></label>\r\n      </div>\r\n      <div>\r\n        <label>Missed Spots: <input type=\"number\" min=\"0\" value={missedSpots} onChange={e => setMissedSpots(e.target.value)} required disabled={loading} /></label>\r\n      </div>\r\n      <div>\r\n        <label>Transmitted Spots: <input type=\"number\" min=\"0\" value={transmittedSpots} onChange={e => setTransmittedSpots(e.target.value)} required disabled={loading} /></label>\r\n      </div>\r\n      <div>\r\n        <label>Gain Spots (Free): <input type=\"number\" min=\"0\" value={gainSpots} onChange={e => setGainSpots(e.target.value)} disabled={loading} /></label>\r\n      </div>\r\n      <button type=\"submit\" disabled={loading}>Submit Summary</button>\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AssignmentSummaryForm;\r\n"],"names":["_ref","assignment","onSubmitted","plannedSpots","setPlannedSpots","useState","planned_spots","missedSpots","setMissedSpots","missed_spots","transmittedSpots","setTransmittedSpots","transmitted_spots","gainSpots","setGainSpots","gain_spots","error","setError","loading","setLoading","useEffect","_jsxs","onSubmit","async","e","preventDefault","planned","Number","missed","transmitted","fetch","id","method","headers","body","JSON","stringify","status","ok","Error","err","message","style","border","padding","margin","children","_jsx","type","min","value","onChange","target","required","disabled","color"],"sourceRoot":""}